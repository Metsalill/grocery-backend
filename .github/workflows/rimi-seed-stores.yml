name: Seed Rimi physical stores

on:
  workflow_dispatch: {}

jobs:
  seed:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}

    steps:
      - uses: actions/checkout@v4

      # --- Scrape to CSV ------------------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install scrape deps
        run: |
          set -euo pipefail
          pip install playwright bs4 lxml
          python -m playwright install --with-deps chromium

      - name: Scrape Rimi stores to CSV
        run: |
          set -euo pipefail
          mkdir -p data
          python scripts/scrape_rimi_stores.py
          echo "--- preview ---"
          head -n 10 data/rimi_stores.csv || true

      # --- Load into Postgres --------------------------------------------------
      - name: Install psql
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Create staging table
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "DROP TABLE IF EXISTS staging_rimi_stores;"
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "CREATE TABLE staging_rimi_stores (name text, address text, lat double precision, lon double precision, external_key text);"

      - name: Load CSV into staging (psql \copy)
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "\copy staging_rimi_stores(name,address,lat,lon,external_key) FROM 'data/rimi_stores.csv' WITH (FORMAT csv, HEADER true, NULL '')"

      # --- Constraint-free upsert (UPDATE then INSERT) ------------------------
      - name: Update existing Rimi rows
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          UPDATE stores s
          SET
            address      = NULLIF(st.address,''),
            lat          = st.lat,
            lon          = st.lon,
            latitude     = st.lat,
            longitude    = st.lon,
            is_online    = false,
            external_key = COALESCE(NULLIF(st.external_key,''), s.external_key)
          FROM staging_rimi_stores st
          WHERE s.chain = 'Rimi'
            AND s.name  = st.name;
          "

      - name: Insert missing Rimi rows
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          INSERT INTO stores (name, chain, address, lat, lon, latitude, longitude, is_online, external_key)
          SELECT
            st.name, 'Rimi',
            NULLIF(st.address,''),
            st.lat, st.lon, st.lat, st.lon,
            false,
            NULLIF(st.external_key,'')
          FROM staging_rimi_stores st
          WHERE COALESCE(st.name,'') <> ''
            AND NOT EXISTS (
              SELECT 1 FROM stores s
              WHERE s.chain = 'Rimi' AND s.name = st.name
            );
          "

      - name: Ensure alias table and alias to ePood (440)
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "CREATE TABLE IF NOT EXISTS store_price_source (store_id bigint PRIMARY KEY, source_store_id bigint NOT NULL);"
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          INSERT INTO store_price_source (store_id, source_store_id)
          SELECT st.id, 440
          FROM stores st
          WHERE st.chain='Rimi' AND COALESCE(st.is_online,false)=false
          ON CONFLICT (store_id) DO UPDATE SET source_store_id = EXCLUDED.source_store_id;
          "

      - name: Summary
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "\t on; SELECT 'staging_rows' AS what, COUNT(*) AS count FROM staging_rimi_stores UNION ALL SELECT 'physical_rimi_in_stores', COUNT(*) FROM stores WHERE chain='Rimi' AND COALESCE(is_online,false)=false UNION ALL SELECT 'aliased_to_440', COUNT(*) FROM store_price_source sps JOIN stores st ON st.id=sps.store_id WHERE st.chain='Rimi' AND COALESCE(st.is_online,false)=false AND sps.source_store_id=440; \t off;"
