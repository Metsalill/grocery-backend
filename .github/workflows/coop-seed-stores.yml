chain: "Coop"
source: "https://www.coop.ee/kauplused"

list:
  url: "https://www.coop.ee/kauplused"
  paginate: false

  # Container for the right-hand store list; adjust if needed.
  row_selector: "section[data-testid='store-list'] article, div.store-list article, li[data-store]"  # fallback: multiple options

  fields:
    # Visible store name text
    name:
      selector: ".store__title, .MuiTypography-root, .store-card__title, h3, .store-title"
      attr: text
      cleanup:
        - strip

    # Visible address line
    address:
      selector: ".store__address, .store-card__address, address, .MuiTypography-root + p"
      attr: text
      cleanup:
        - strip

    # City / county is often part of the address; leave blank if not needed
    city:
      selector: ".store__city, .store-city"
      attr: text
      optional: true
      cleanup: [strip]

    # Link to Google Maps (weâ€™ll regex lat/lon from it)
    gmaps_href:
      selector: "a[href*='google'], a[href*='goo.gl/maps'], a:contains('Google Maps')"
      attr: href

    # Latitude from Google Maps link: tries @lat,lon or q=lat,lon
    lat:
      from: gmaps_href
      regex_any:
        - '(?<=@)(-?\d{1,2}\.\d+),(-?\d{1,3}\.\d+)'   # @lat,lon,zoom form
        - '(?<=\?q=)(-?\d{1,2}\.\d+),(-?\d{1,3}\.\d+)' # ?q=lat,lon
      group: 1

    lon:
      from: gmaps_href
      regex_any:
        - '(?<=@)(-?\d{1,2}\.\d+),(-?\d{1,3}\.\d+)'   # @lat,lon,zoom form
        - '(?<=\?q=)(-?\d{1,2}\.\d+),(-?\d{1,3}\.\d+)' # ?q=lat,lon
      group: 2

upsert:
  # How to write into your `stores` table
  table: "stores"
  conflict_on: # matches your existing unique constraint on (chain, name)
    - "chain"
    - "name"

  set_on_insert:
    chain: "Coop"
    is_online: false

  map:
    name: "name"
    address: "address"
    lat: "lat"
    lon: "lon"
