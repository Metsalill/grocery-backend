name: Export all chains (matching dataset)

on:
  workflow_dispatch:

jobs:
  export:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chain: [Selver, Prisma, Rimi, Barbora] # Barbora = Maxima online

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Export ${{ matrix.chain }} products CSV
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}
          SQL_QUERY: |
            COPY (
              WITH base AS (
                SELECT
                  CASE WHEN lower(s.chain) LIKE 'maxima%' THEN 'Barbora' ELSE s.chain END AS chain,
                  s.name AS store_name,
                  s.id AS store_id,
                  p.id AS product_id,
                  p.name AS product,
                  p.brand AS brand_canonical,
                  p.amount AS size_text,
                  p.ean,
                  pr.price,
                  pr.collected_at,
                  CASE
                    WHEN lower(s.chain) LIKE 'maxima%' THEN 'barbora'
                    WHEN lower(s.chain) LIKE 'selver%' THEN 'selver'
                    WHEN lower(s.chain) LIKE 'prisma%' THEN 'prisma'
                    WHEN lower(s.chain) LIKE 'rimi%' THEN 'rimi'
                    ELSE lower(s.chain)
                  END AS chain_norm,
                  regexp_replace(unaccent(lower(p.name)), '[^a-z0-9]+', ' ', 'g') AS name_norm
                FROM prices pr
                JOIN products p ON p.id = pr.product_id
                JOIN stores s ON s.id = pr.store_id
                WHERE (
                  ( :'chain' = 'Barbora' AND lower(s.chain) LIKE 'maxima%' )
                  OR ( :'chain' <> 'Barbora' AND s.chain ILIKE :'chain' || '%' )
                )
              ),
              epm AS (
                SELECT
                  CASE
                    WHEN lower(source) IN ('barbora','maxima') THEN 'barbora'
                    WHEN lower(source) = 'selver' THEN 'selver'
                    WHEN lower(source) = 'prisma' THEN 'prisma'
                    WHEN lower(source) = 'rimi' THEN 'rimi'
                    ELSE lower(source)
                  END AS chain_norm,
                  product_id,
                  ext_id
                FROM ext_product_map
              ),
              bc AS (
                SELECT
                  name_norm,
                  MIN(ext_id) AS ext_id,
                  MAX(NULLIF(trim(brand), '')) AS brand_barbora
                FROM (
                  SELECT
                    regexp_replace(
                      unaccent(lower(regexp_replace(ext_id, '^https?[-:]?barbora[-:]?ee[-:]?toode[-:]?', ''))),
                      '[^a-z0-9]+', ' ', 'g'
                    ) AS name_norm,
                    ext_id,
                    brand
                  FROM barbora_candidates
                ) t
                GROUP BY name_norm
              )
              SELECT
                b.chain,
                b.store_name,
                b.store_id,
                b.product_id,
                b.product,
                CASE
                  WHEN b.chain_norm = 'barbora' THEN COALESCE(bc.brand_barbora, b.brand_canonical)
                  ELSE b.brand_canonical
                END AS brand,
                b.size_text,
                b.ean,
                b.name_norm,
                CASE
                  WHEN b.chain_norm = 'barbora' THEN bc.ext_id
                  ELSE e.ext_id
                END AS ext_id,
                b.price,
                b.collected_at
              FROM base b
              LEFT JOIN epm e ON e.chain_norm = b.chain_norm AND e.product_id = b.product_id
              LEFT JOIN bc ON b.chain_norm = 'barbora' AND bc.name_
