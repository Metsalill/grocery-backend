name: Export products for Barbora, Prisma, Selver, Rimi (matching-ready)

on:
  workflow_dispatch: {}

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}
  PGPASSWORD: ""

jobs:
  export:
    name: export (${{ matrix.chain }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Online store ids we use in the DB:
          # Prisma Online = 14, e-Selver = 31, Rimi ePood = 440, Barbora ePood = 441
          - chain: Prisma
            table: staging_prisma_products
            store_id: 14
          - chain: Selver
            table: staging_selver_products
            store_id: 31
          - chain: Rimi
            table: staging_rimi_products
            store_id: 440
          - chain: Barbora
            table: staging_barbora_products
            store_id: 441

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends postgresql-client

      - name: Connectivity check
        env:
          PGCONNECT_TIMEOUT: "15"
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "SELECT current_database() AS db, now() AS ts;"

      - name: Export ${{ matrix.chain }} → CSV (matching-ready columns)
        run: |
          set -euo pipefail
          CHAIN="${{ matrix.chain }}"
          TBL="${{ matrix.table }}"
          STORE_ID=${{ matrix.store_id }}
          mkdir -p out

          # lower-case name for file
          CHAIN_LC="$(echo "$CHAIN" | tr '[:upper:]' '[:lower:]')"
          OUT="out/${CHAIN_LC}_products.csv"

          # Export:
          #  - raw product fields we keep in staging (ext_id, name, price, brand, sku_raw, source_url, ean_raw/ean_norm)
          #  - store_id + chain (constants)
          #  - host derived from URL (handy for QA)
          #  - helper 'ean_from_sku_if_digits' (8–14 digits only; Rimi/Barbora often blank)
          #  - a few robust hash keys we can use for mapping (do not depend on EAN):
          #       k_ext_id, k_url, k_sku, k_name_lower, k_chain_ext
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 <<SQL
          \copy (
            SELECT
              '$CHAIN'::text                               AS chain,
              $STORE_ID::int                               AS store_id,

              -- core product fields from staging
              ext_id,
              name,
              price,
              currency,
              collected_at,
              brand,
              size_text,
              category_path,
              category_leaf,
              sku_raw,
              source_url,
              ean_raw,
              ean_norm,

              -- helpers
              CASE WHEN source_url IS NOT NULL
                   THEN lower(regexp_replace(split_part(source_url,'/',3), '^www\\.', ''))
                   END                                     AS host_from_url,
              CASE WHEN sku_raw ~ '^[0-9]{8,14}$' THEN sku_raw END
                                                            AS ean_from_sku_if_digits,
              CASE
                WHEN COALESCE(ean_norm,'') <> ''          THEN 'ean_norm'
                WHEN sku_raw ~ '^[0-9]{8,14}$'            THEN 'sku_digits'
                ELSE NULL
              END                                         AS ean_source_hint,

              -- hashing keys for reliable matching (do NOT rely on EAN)
              md5(COALESCE(ext_id,''))                    AS k_ext_id,
              md5(COALESCE(source_url,''))                AS k_url,
              md5(COALESCE(sku_raw,''))                   AS k_sku,
              md5(lower(COALESCE(name,'')))               AS k_name_lower,
              md5(lower('$CHAIN') || '|' || COALESCE(ext_id,'')) AS k_chain_ext

            FROM public.$TBL
          ) TO '$OUT' CSV HEADER
          ;
          SQL

      - name: Upload ${{ matrix.chain }} CSV
        uses: actions/upload-artifact@v4
        with:
          name: export-${{ matrix.chain }}
          path: out/*.csv
          if-no-files-found: error

  bundle:
    name: bundle all CSVs
    needs: export
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all_exports

      - name: Show tree
        run: |
          set -euo pipefail
          echo "Artifacts downloaded to:"
          find all_exports -type f -maxdepth 3 -print

      - name: Combine into single zip
        run: |
          set -euo pipefail
          mkdir -p dist
          zip -r dist/exports_matching_ready.zip all_exports

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: exports-matching-ready
          path: dist/exports_matching_ready.zip
