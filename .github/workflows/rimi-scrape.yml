name: "Rimi - Category Crawl (Playwright) + optional DB upsert"

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "prices (default) or metadata (only items missing brand/EAN/manufacturer)"
        required: false
        default: "prices"
      categories_multiline:
        description: "Rimi category URLs (one per line). If omitted, we use the SH-coded roots."
        required: false
        default: ""
      page_limit:
        description: "Max pages per category (0 = all)"
        required: false
        default: "0"
      max_products:
        description: "Hard cap on total PDPs (0 = unlimited)"
        required: false
        default: "0"
      headless:
        description: "Headless browser (1/0)"
        required: false
        default: "1"
      req_delay:
        description: "Delay between page ops (sec)"
        required: false
        default: "0.25"
  schedule:
    - cron: "17 */2 * * *"  # every 2 hours at :17 (UTC)
    - cron: "0 2 * * *"     # nightly at 02:00 UTC

concurrency:
  # Separate groups per mode â†’ prices and metadata won't cancel each other
  group: rimi-category-crawl-${{ github.event.inputs.mode || 'prices' }}
  cancel-in-progress: true

jobs:
  crawl-and-upsert:
    name: crawl-and-upsert (shard ${{ matrix.shard }})
    runs-on: ubuntu-latest
    timeout-minutes: 110

    strategy:
      fail-fast: false
      matrix:
        shard: [0, 1, 2, 3]   # 4-way sharding

    env:
      PYTHONUNBUFFERED: "1"
      OUTPUT_CSV: data/rimi_products.csv
      SHARD: ${{ matrix.shard }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}
      MODE: ${{ github.event.inputs.mode || 'prices' }}
      MODE_IS_PRICES: ${{ (github.event.inputs.mode || 'prices') == 'prices' }}
      MODE_IS_METADATA: ${{ (github.event.inputs.mode || 'prices') == 'metadata' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
