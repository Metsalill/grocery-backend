name: "Coop – Category Crawl (Playwright) + optional DB upsert"

on:
  workflow_dispatch:
    inputs:
      region:
        description: "Base region URL (https://coophaapsalu.ee or https://vandra.ecoop.ee)"
        required: false
        default: "https://vandra.ecoop.ee"
      categories_multiline:
        description: "Category URLs/paths (one per line). Full URLs or /et/tooted/53-joogid"
        required: false
        default: ""
      categories_file_url:
        description: "Raw URL to .txt (one URL/path per line)"
        required: false
        default: ""
      page_limit:
        description: "Discovery cap per category (0 = all)"
        required: false
        default: "0"
      max_products:
        description: "Post-discovery cap per category (0 = all)"
        required: false
        default: "0"
      headless:
        description: "Chromium headless (1/0)"
        required: false
        default: "1"
      req_delay:
        description: "Delay between actions (seconds)"
        required: false
        default: "0.5"
      pdp_workers:
        description: "Concurrent PDP tabs per category"
        required: false
        default: "4"
      shards:
        description: "Parallel shards for categories (1–8)"
        required: false
        default: "4"
      upsert_db:
        description: "Set to 1 to upsert into public.staging_coop_products"
        required: false
        default: "0"

  # 05:30 Tallinn daily (02:30 UTC)
  schedule:
    - cron: "30 2 * * *"

concurrency:
  group: coop-scrape-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: false

jobs:
  crawl:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shard_index: [0, 1, 2, 3, 4, 5, 6, 7]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Quietly skip extra matrix jobs (keeps logs obvious & saves minutes)
      - name: Skip extra shards
        if: ${{ matrix.shard_index >= (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        run: |
          echo "Skipping shard ${{ matrix.shard_index }} (only ${{ github.event_name == 'workflow_dispatch' && inputs.shards || '1' }} requested)."

      - name: Set up Python
        if: ${{ matrix.shard_index < (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps & Playwright
        if: ${{ matrix.shard_index < (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        run: |
          python -m pip install --upgrade pip
          pip install playwright==1.46.0 asyncpg
          python -m playwright install --with-deps chromium

      - name: Choose DB URL (prefer PUBLIC)
        if: ${{ matrix.shard_index < (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        env:
          DATABASE_URL_PUBLIC: ${{ secrets.DATABASE_URL_PUBLIC }}
          DATABASE_URL_PRIVATE: ${{ secrets.DATABASE_URL }}
        run: |
          if [ -n "${DATABASE_URL_PUBLIC:-}" ]; then
            echo "DATABASE_URL=$DATABASE_URL_PUBLIC" >> "$GITHUB_ENV"
            echo "[db] Using DATABASE_URL_PUBLIC"
          elif [ -n "${DATABASE_URL_PRIVATE:-}" ]; then
            echo "DATABASE_URL=$DATABASE_URL_PRIVATE" >> "$GITHUB_ENV"
            echo "[db] Using DATABASE_URL (private)"
          else
            echo "[db] No DB secret provided; upsert (if enabled) will be skipped."
          fi

      - name: Build categories file
        if: ${{ matrix.shard_index < (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        env:
          REGION_URL:        ${{ inputs.region }}
          CATS_MULTILINE:    ${{ inputs.categories_multiline }}
          CATS_FILE_URL:     ${{ inputs.categories_file_url }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p out
          CATS_ALL="coop_categories.txt"
          : > "$CATS_ALL"

          # 1) URL source (if provided)
          if [ -n "$CATS_FILE_URL" ]; then
            echo ">> downloading categories from: $CATS_FILE_URL"
            curl -fsSL "$CATS_FILE_URL" -o "$CATS_ALL" || true
          fi

          # 2) Manual multiline
          if [ ! -s "$CATS_ALL" ] && [ -n "$CATS_MULTILINE" ]; then
            printf '%s\n' "$CATS_MULTILINE" > "$CATS_ALL"
          fi

          # 3) Repo defaults by region
          if [ ! -s "$CATS_ALL" ]; then
            if echo "$REGION_URL" | grep -qi 'coophaapsalu\.ee'; then
              REPO_FILE="data/coop_haapsalu_categories.txt"
            else
              REPO_FILE="data/coop_vandra_categories.txt"
            fi
            if [ -f "$REPO_FILE" ]; then
              echo ">> using repo categories file: $REPO_FILE"
              cp "$REPO_FILE" "$CATS_ALL"
            fi
          fi

          # 4) Last-resort tiny default
          if [ ! -s "$CATS_ALL" ]; then
            if echo "$REGION_URL" | grep -qi 'coophaapsalu\.ee'; then
              echo "/tootekategooria/joogid/" > "$CATS_ALL"
            else
              echo "/et/tooted/53-joogid" > "$CATS_ALL"
            fi
          fi

          # Normalize CRLF
          sed -e 's/\r$//' -i "$CATS_ALL"

          echo "=== Categories file ==="
          cat "$CATS_ALL"
          echo "======================="

      - name: Run Coop crawler (sharded)
        if: ${{ matrix.shard_index < (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        env:
          REGION_URL:  ${{ inputs.region }}
          PAGE_LIMIT:  ${{ github.event_name == 'workflow_dispatch' && inputs.page_limit  || '0' }}
          MAX_PRODUCTS:${{ github.event_name == 'workflow_dispatch' && inputs.max_products || '0' }}
          HEADLESS:    ${{ github.event_name == 'workflow_dispatch' && inputs.headless    || '1' }}
          REQ_DELAY:   ${{ github.event_name == 'workflow_dispatch' && inputs.req_delay   || '0.5' }}
          PDP_WORKERS: ${{ github.event_name == 'workflow_dispatch' && inputs.pdp_workers || '4' }}
          SHARD_COUNT: ${{ github.event_name == 'workflow_dispatch' && inputs.shards      || '1' }}
          COOP_UPSERT_DB: ${{ github.event_name == 'schedule' && '1' || inputs.upsert_db }}
        run: |
          set -euo pipefail
          python scripts/coop_crawl_categories_pw.py \
            --region "$REGION_URL" \
            --categories-file "coop_categories.txt" \
            --page-limit "$PAGE_LIMIT" \
            --max-products "$MAX_PRODUCTS" \
            --headless "$HEADLESS" \
            --req-delay "$REQ_DELAY" \
            --pdp-workers "$PDP_WORKERS" \
            --cat-shards "$SHARD_COUNT" \
            --cat-index "${{ matrix.shard_index }}" \
            --out "out/coop_products_${{ github.run_id }}_shard${{ matrix.shard_index }}.csv"

      - name: Upload CSV artifact
        if: ${{ matrix.shard_index < (github.event_name == 'workflow_dispatch' && fromJSON(inputs.shards) || 1) }}
        uses: actions/upload-artifact@v4
        with:
          name: coop-products-${{ github.run_id }}
          path: out/*.csv
          if-no-files-found: warn
          retention-days: 7
