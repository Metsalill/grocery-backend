name: "Coop â€“ Category Crawl (Playwright) + optional DB upsert"

on:
  workflow_dispatch:
    inputs:
      region:
        description: "Base region URL (e.g., https://coophaapsalu.ee or https://vandra.ecoop.ee)"
        required: false
        default: "https://vandra.ecoop.ee"
      categories_multiline:
        description: "Category URLs or paths (one per line). e.g. /et/tooted/53-joogid"
        required: false
        default: ""
      categories_file_url:
        description: "Optional raw URL to a .txt file with categories (one per line)"
        required: false
        default: ""
      page_limit:
        description: "Discovery cap per category (0 = all)"
        required: false
        default: "0"
      max_products:
        description: "Post-discovery cap per category (0 = all)"
        required: false
        default: "0"
      headless:
        description: "Chromium headless (1/0)"
        required: false
        default: "1"
      req_delay:
        description: "Delay between actions (seconds)"
        required: false
        default: "0.5"
      pdp_workers:
        description: "Concurrent PDP tabs per category"
        required: false
        default: "4"
      upsert_db:
        description: "Set to 1 to upsert into public.staging_coop_products"
        required: false
        default: "0"

  # 05:30 Tallinn daily (02:30 UTC)
  schedule:
    - cron: "30 2 * * *"

concurrency:
  group: coop-scrape-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: false

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps & Playwright
        run: |
          python -m pip install --upgrade pip
          pip install playwright==1.46.0 asyncpg
          python -m playwright install --with-deps chromium

      - name: (Optional) Download categories file
        if: ${{ inputs.categories_file_url != '' }}
        run: |
          echo ">> downloading categories from: ${{ inputs.categories_file_url }}"
          curl -fsSL "${{ inputs.categories_file_url }}" -o coop_categories.txt || true

      - name: Run Coop crawler (with repo fallback)
        env:
          COOP_UPSERT_DB: ${{ github.event_name == 'schedule' && '1' || inputs.upsert_db }}
          DATABASE_URL: ${{ (github.event_name == 'schedule' || inputs.upsert_db == '1') && secrets.DATABASE_URL || '' }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p out

          REGION_URL="${{ inputs.region }}"
          CATS_MULTILINE="${{ inputs.categories_multiline }}"
          CATS_ALL="coop_categories.txt"

          # Start with an empty file if none was downloaded
          if [ ! -f "$CATS_ALL" ]; then : > "$CATS_ALL"; fi

          # 1) Use multiline UI input if present
          if [ -z "$(sed -n '1p' "$CATS_ALL" 2>/dev/null)" ] && [ -n "$CATS_MULTILINE" ]; then
            printf '%s\n' "$CATS_MULTILINE" > "$CATS_ALL"
            echo ">> using categories from UI multiline input"
          fi

          # 2) Repo defaults by region
          if [ ! -s "$CATS_ALL" ]; then
            if echo "$REGION_URL" | grep -qi 'vandra\.ecoop\.ee'; then
              REPO_FILE="data/coop_vandra_categories.txt"
            elif echo "$REGION_URL" | grep -qi 'coophaapsalu\.ee'; then
              REPO_FILE="data/coop_haapsalu_categories.txt"
            else
              REPO_FILE=""
            fi
            if [ -n "$REPO_FILE" ] && [ -f "$REPO_FILE" ]; then
              echo ">> using repo categories file: $REPO_FILE"
              cp "$REPO_FILE" "$CATS_ALL"
            fi
          fi

          # 3) Last-resort single category so the run never fails
          if [ ! -s "$CATS_ALL" ]; then
            if echo "$REGION_URL" | grep -qi 'coophaapsalu\.ee'; then
              echo "/tootekategooria/joogid/" > "$CATS_ALL"
            else
              echo "/et/tooted/53-joogid" > "$CATS_ALL"
            fi
            echo ">> using single-category fallback"
          fi

          # Normalize CRLF if pasted from Windows
          sed -e 's/\r$//' -i "$CATS_ALL"

          echo "=== Categories to crawl ==="
          cat "$CATS_ALL" || true
          echo "==========================="

          python scripts/coop_crawl_categories_pw.py \
            --region "$REGION_URL" \
            --categories-multiline "" \
            --categories-file "$CATS_ALL" \
            --page-limit "${{ inputs.page_limit }}" \
            --max-products "${{ inputs.max_products }}" \
            --headless "${{ inputs.headless }}" \
            --req-delay "${{ inputs.req_delay }}" \
            --pdp-workers "${{ inputs.pdp_workers }}" \
            --out "out/coop_products_${{ github.run_id }}.csv"

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: coop-products-${{ github.run_id }}
          path: out/*.csv
          if-no-files-found: warn
          retention-days: 7
