name: "DB Inventory (Railway)"

on:
  workflow_dispatch: {}

jobs:
  inventory:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}   # set in repo secrets
    steps:
      - uses: actions/checkout@v4

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Dump schema (DDL)
        run: |
          pg_dump --no-owner --schema-only "$DATABASE_URL" > db_schema.sql

      - name: Collect tables, columns, indexes, counts, extensions
        run: |
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "\x off"
          # tables
          psql "$DATABASE_URL" -Atc "
            SELECT table_schema, table_name
            FROM information_schema.tables
            WHERE table_type='BASE TABLE'
              AND table_schema NOT IN ('pg_catalog','information_schema')
            ORDER BY 1,2;" > tables.csv
          # row estimates
          psql "$DATABASE_URL" -Atc "
            SELECT schemaname, relname, n_live_tup
            FROM pg_stat_user_tables
            ORDER BY n_live_tup DESC;" > rowcounts.csv
          # columns
          psql "$DATABASE_URL" -Atc "
            SELECT table_schema, table_name, column_name, data_type,
                   is_nullable, column_default
            FROM information_schema.columns
            WHERE table_schema NOT IN ('pg_catalog','information_schema')
            ORDER BY 1,2,ordinal_position;" > columns.csv
          # indexes
          psql "$DATABASE_URL" -Atc "
            SELECT schemaname, tablename, indexname, indexdef
            FROM pg_indexes
            WHERE schemaname NOT IN ('pg_catalog','information_schema')
            ORDER BY 1,2;" > indexes.csv
          # constraints
          psql "$DATABASE_URL" -Atc "
            SELECT tc.table_schema, tc.table_name, tc.constraint_name, tc.constraint_type
            FROM information_schema.table_constraints tc
            WHERE tc.table_schema NOT IN ('pg_catalog','information_schema')
            ORDER BY 1,2,3;" > constraints.csv
          # extensions
          psql "$DATABASE_URL" -Atc "
            SELECT name, default_version, installed_version
            FROM pg_available_extensions
            WHERE installed_version IS NOT NULL
            ORDER BY name;" > extensions.csv
          # server version
          psql "$DATABASE_URL" -Atc "SHOW server_version;" > version.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: db-inventory
          path: |
            db_schema.sql
            tables.csv
            rowcounts.csv
            columns.csv
            indexes.csv
            constraints.csv
            extensions.csv
            version.txt
