name: Prisma Image Backfill (Nightly)

on:
  schedule:
    # 02:30 UTC every night
    - cron: "30 2 * * *"
  workflow_dispatch: {}

jobs:
  backfill:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      # --- App settings expected by settings.py ---
      ENV: production
      ENABLE_DOCS: "0"
      LOG_REQUESTS: "0"

      # DB
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DB_CONNECT_TIMEOUT: "10"

      # R2 / S3
      R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
      R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      R2_BUCKET: ${{ secrets.R2_BUCKET }}
      # Either endpoint or account-id auto-derives:
      R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
      R2_PUBLIC_BASE: ${{ secrets.R2_PUBLIC_BASE }}

      # Optional but nice:
      R2_PREFIX: "products/"

      # Rate limiting middleware uses these; harmless here
      RATE_LIMIT_PER_MINUTE: "300"
      REDIS_URL: ""
      APP_WEB_ORIGIN: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          # Ensure we have the few we need even if not pinned:
          pip install playwright psycopg2-binary boto3

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps

      - name: Run Prisma image backfill
        run: |
          # Backfill phase: set to 1000; after youâ€™re done, drop to ~200
          python scripts/prisma_image_scraper.py --limit 1000 --headless 1
