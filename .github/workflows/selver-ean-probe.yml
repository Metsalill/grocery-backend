name: "Selver â†’ Backfill EANs (DB-driven)"

on:
  workflow_dispatch:
    inputs:
      batch:
        description: "Rows per run"
        required: false
        default: "200"
      headless:
        description: "Headless (1/0)"
        required: false
        default: "1"
      req_delay:
        description: "Delay seconds"
        required: false
        default: "0.6"
  schedule:
    - cron: "15 2 * * *"   # daily 02:15 UTC (optional)

concurrency:
  group: selver-backfill-eans
  cancel-in-progress: true

jobs:
  backfill:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}
      BATCH: ${{ github.event.inputs.batch || '200' }}
      HEADLESS: ${{ github.event.inputs.headless || '1' }}
      REQ_DELAY: ${{ github.event.inputs.req_delay || '0.6' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Playwright
        run: |
          pip install playwright psycopg2-binary
          python -m playwright install --with-deps chromium

      - name: Sanity check script
        run: |
          test -f scripts/selver_probe_ean_pw.py || { echo "Missing scripts/selver_probe_ean_pw.py"; exit 1; }

      - name: Run Selver EAN backfill (DB-driven)
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          python scripts/selver_probe_ean_pw.py

      - name: Post-run stats
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          SELECT COUNT(*) AS still_missing
          FROM products
          WHERE COALESCE(NULLIF(TRIM(ean),''), NULL) IS NULL;
          "
          # If queue exists, show attempts/errors
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          DO $$
          BEGIN
            IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name='selver_ean_backfill_queue') THEN
              RAISE NOTICE 'Queue attempts:';
            END IF;
          END $$;
          "
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          SELECT attempts, COUNT(*) 
          FROM selver_ean_backfill_queue
          GROUP BY attempts
          ORDER BY attempts;
          " || true
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "
          SELECT COUNT(*) AS failures
          FROM selver_ean_backfill_queue
          WHERE last_error IS NOT NULL;
          " || true
