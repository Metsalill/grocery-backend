name: "Coop (Bolt Food) – Auto category crawl → CSV/DB"

on:
  # Manual only (no schedule) so you can run it when you want
  workflow_dispatch:
    inputs:
      city_path:
        description: "Bolt city path (from URL after /en-US/, e.g. 2-tartu)"
        required: false
        default: "2-tartu"
      headless:
        description: "Headless Playwright (1/0)"
        required: false
        default: "1"
      req_delay:
        description: "Delay between steps (sec)"
        required: false
        default: "0.25"
      upsert_db:
        description: "Upsert into Postgres (1=yes, 0=just CSV)"
        required: false
        default: "1"
      categories_dir:
        description: "Optional: base dir for per-store category files (uses {dir}/{city}/{slug}.txt if present)"
        required: false
        default: "data/bolt"
      deep:
        description: "Open product modal to parse brand/manufacturer (1=yes, 0=no)"
        required: false
        default: "1"

# Separate concurrency group for this workflow (manual only)
concurrency:
  group: coop-bolt-crawl-manual
  cancel-in-progress: true

jobs:
  crawl-bolt:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # give it more time while testing

    env:
      # Use the public DB URL as discussed
      DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}
      CITY_PATH: ${{ inputs.city_path || '2-tartu' }}
      HEADLESS: ${{ inputs.headless || '1' }}
      REQ_DELAY: ${{ inputs.req_delay || '0.25' }}
      UPSERT_DB: ${{ inputs.upsert_db || '1' }}
      CATEGORIES_DIR: ${{ inputs.categories_dir || 'data/bolt' }}
      DEEP: ${{ inputs.deep || '1' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('scripts/bolt_crawler.py') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright==1.47.0 selectolax psycopg[binary] tenacity
          python -m playwright install --with-deps chromium

      - name: Make output dir
        run: python -c "import os; os.makedirs('out', exist_ok=True)"

      # Kvartali (has categories override file already)
      - name: Crawl Kvartali COOP Maksimarket
        run: >
          python scripts/bolt_crawler.py
          --city "${{ env.CITY_PATH }}"
          --store "Kvartali COOP Maksimarket"
          --headless "${{ env.HEADLESS }}"
          --req-delay "${{ env.REQ_DELAY }}"
          --upsert-db "${{ env.UPSERT_DB }}"
          --categories-dir "${{ env.CATEGORIES_DIR }}"
          --deep "${{ env.DEEP }}"
          --out "out/coop_bolt_${{ env.CITY_PATH }}_Kvartali_COOP_Maksimarket.csv"

      - name: Crawl Lõunakeskuse COOP Maksimarket
        run: >
          python scripts/bolt_crawler.py
          --city "${{ env.CITY_PATH }}"
          --store "Lõunakeskuse COOP Maksimarket"
          --headless "${{ env.HEADLESS }}"
          --req-delay "${{ env.REQ_DELAY }}"
          --upsert-db "${{ env.UPSERT_DB }}"
          --categories-dir "${{ env.CATEGORIES_DIR }}"
          --deep "${{ env.DEEP }}"
          --out "out/coop_bolt_${{ env.CITY_PATH }}_Lounakeskuse_COOP_Maksimarket.csv"

      - name: Crawl Eedeni COOP Maksimarket
        run: >
          python scripts/bolt_crawler.py
          --city "${{ env.CITY_PATH }}"
          --store "Eedeni COOP Maksimarket"
          --headless "${{ env.HEADLESS }}"
          --req-delay "${{ env.REQ_DELAY }}"
          --upsert-db "${{ env.UPSERT_DB }}"
          --categories-dir "${{ env.CATEGORIES_DIR }}"
          --deep "${{ env.DEEP }}"
          --out "out/coop_bolt_${{ env.CITY_PATH }}_Eedeni_COOP_Maksimarket.csv"

      - name: Upload CSV artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "coop-bolt-csv"
          path: out/*.csv
          if-no-files-found: warn
