name: "Coop (Bolt Food) – Auto category crawl → CSV/DB"

on:
  # Manual runs only
  workflow_dispatch:
    inputs:
      city_path:
        description: "Bolt city path (from URL after /en-US/, e.g. 2-tartu)"
        required: false
        default: "2-tartu"
      headless:
        description: "Headless Playwright (1/0)"
        required: false
        default: "1"
      req_delay:
        description: "Delay between steps (sec)"
        required: false
        default: "0.25"
      upsert_db:
        description: "Upsert into Postgres (1=yes, 0=just CSV)"
        required: false
        default: "1"
      categories_dir:
        description: "Base dir for per-store category files (uses {dir}/{city}/{slug}.txt if present)"
        required: false
        default: "data/bolt"

# Separate concurrency bucket for manual runs; cancel only if a *newer manual* run starts.
concurrency:
  group: coop-bolt-crawl-workflow_dispatch
  cancel-in-progress: true

jobs:
  # One job per store, in parallel
  crawl-bolt:
    name: Crawl ${{ matrix.store }}
    runs-on: ubuntu-latest

    # Give each store ample time; running in parallel keeps total wall time low.
    timeout-minutes: 120

    strategy:
      fail-fast: false
      matrix:
        store:
          - "Kvartali COOP Maksimarket"
          - "Lõunakeskuse COOP Maksimarket"
          - "Eedeni COOP Maksimarket"

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_PUBLIC }}
      CITY_PATH: ${{ inputs.city_path || '2-tartu' }}
      HEADLESS: ${{ inputs.headless || '1' }}
      REQ_DELAY: ${{ inputs.req_delay || '0.25' }}
      UPSERT_DB: ${{ inputs.upsert_db || '1' }}
      CATEGORIES_DIR: ${{ inputs.categories_dir || 'data/bolt' }}
      STORE_NAME: ${{ matrix.store }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}-py311
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install playwright==1.47.0 selectolax psycopg[binary] tenacity
          python -m playwright install --with-deps chromium

      - name: Crawl ${{ env.STORE_NAME }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p out
          SAFE_NAME="$(echo "${STORE_NAME}" | tr ' ' '_' | tr -dc '[:alnum:]_')"
          echo "==> Crawling: ${STORE_NAME} (city=${CITY_PATH}, headless=${HEADLESS}, delay=${REQ_DELAY}, upsert=${UPSERT_DB})"
          python scripts/bolt_crawler.py \
            --city "${CITY_PATH}" \
            --store "${STORE_NAME}" \
            --headless "${HEADLESS}" \
            --req-delay "${REQ_DELAY}" \
            --upsert-db "${UPSERT_DB}" \
            --categories-dir "${CATEGORIES_DIR}" \
            --out "out/coop_bolt_${CITY_PATH}_${SAFE_NAME}.csv"

      - name: Upload CSV artifacts (${{ env.STORE_NAME }})
        uses: actions/upload-artifact@v4
        with:
          name: "coop-bolt-csv-${{ matrix.store }}"
          path: out/*.csv
          if-no-files-found: warn
