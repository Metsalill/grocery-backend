name: "Export Barbora (barbora_candidates) → CSV artifact"

on:
  workflow_dispatch:
    inputs:
      include_headers:
        description: "Include CSV header row"
        required: false
        default: "true"
      gzip_output:
        description: "Also upload .csv.gz"
        required: false
        default: "true"

jobs:
  export-barbora-candidates:
    runs-on: ubuntu-latest

    steps:
      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      # Sanity: show counts so you can verify in logs
      - name: Show row & brand counts
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 <<'SQL'
          \pset footer off
          SELECT 'barbora_candidates' AS table_name,
                 COUNT(*) AS rows_total,
                 COUNT(*) FILTER (WHERE brand IS NOT NULL AND btrim(brand) <> '') AS rows_with_brand,
                 COUNT(DISTINCT btrim(brand)) AS distinct_brands
          FROM barbora_candidates;
          SQL

      # Export CSV (UTF-8, comma separated)
      - name: Export barbora_candidates → CSV
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          INCLUDE_HEADERS: ${{ github.event.inputs.include_headers }}
        run: |
          set -euo pipefail
          # Build \copy options
          if [ "${INCLUDE_HEADERS:-true}" = "true" ]; then
            COPY_OPTS="WITH CSV HEADER ENCODING 'UTF8'"
          else
            COPY_OPTS="WITH CSV ENCODING 'UTF8'"
          fi

          # Export — choose the exact columns you want in the file
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "\copy (
            SELECT
              name,
              brand,
              ean_raw    AS ean,
              size_text,
              price,
              currency,
              category_path,
              category_leaf,
              manufacturer,
              source_url
            FROM barbora_candidates
            WHERE brand IS NOT NULL AND btrim(brand) <> ''
            ORDER BY name, brand, size_text
          ) TO '/tmp/barbora_products.csv' $COPY_OPTS"

      # Optional: gzip version too
      - name: Create gzip copy
        if: ${{ github.event.inputs.gzip_output == 'true' }}
        run: |
          set -euo pipefail
          gzip -c /tmp/barbora_products.csv > /tmp/barbora_products.csv.gz

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: barbora_products_csv
          path: /tmp/barbora_products.csv
          if-no-files-found: error
          compression-level: 0

      - name: Upload GZIP artifact
        if: ${{ github.event.inputs.gzip_output == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: barbora_products_csv_gz
          path: /tmp/barbora_products.csv.gz
          if-no-files-found: error
          compression-level: 0
