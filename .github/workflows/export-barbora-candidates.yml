name: "Export Barbora (barbora_candidates) → CSV artifact"

on:
  workflow_dispatch:

jobs:
  export-barbora-candidates:
    runs-on: ubuntu-latest
    steps:
      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Prepare DATABASE_URL (public) with sslmode=require
        id: prep
        env:
          DBURL_PUBLIC: ${{ secrets.DATABASE_URL_PUBLIC }}
          DBURL: ${{ secrets.DATABASE_URL }}
        run: |
          set -euo pipefail
          URL="${DBURL_PUBLIC:-$DBURL}"
          if [ -z "${URL}" ]; then
            echo "No DATABASE_URL_PUBLIC or DATABASE_URL secret set." >&2
            exit 1
          fi
          # add sslmode=require if missing
          if [[ "$URL" == *"?"* ]]; then
            case "$URL" in
              *"sslmode="*) URL="$URL" ;;
              *) URL="${URL}&sslmode=require" ;;
            esac
          else
            URL="${URL}?sslmode=require"
          fi
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Show row & brand counts
        env:
          DATABASE_URL: ${{ steps.prep.outputs.url }}
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 <<'SQL'
          \pset footer off
          SELECT 'barbora_candidates' AS table_name,
                 COUNT(*) AS rows_total,
                 COUNT(*) FILTER (WHERE brand IS NOT NULL AND btrim(brand) <> '') AS rows_with_brand,
                 COUNT(DISTINCT btrim(brand)) AS distinct_brands
          FROM barbora_candidates;
          SQL

      - name: Export barbora_candidates → CSV
        env:
          DATABASE_URL: ${{ steps.prep.outputs.url }}
        run: |
          set -euo pipefail
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "\copy (
            SELECT
              name,
              brand,
              ean_raw    AS ean,
              size_text,
              price,
              currency,
              category_path,
              category_leaf,
              manufacturer,
              source_url
            FROM barbora_candidates
            WHERE brand IS NOT NULL AND btrim(brand) <> ''
            ORDER BY name, brand, size_text
          ) TO '/tmp/barbora_products.csv' WITH CSV HEADER ENCODING 'UTF8'"

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: barbora_products_csv
          path: /tmp/barbora_products.csv
          if-no-files-found: error
          compression-level: 0
