name: Load test /compare

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Backend base URL (e.g. https://grocery-backend-production-66f0.up.railway.app)"
        required: true
      lat:
        description: "Latitude"
        required: true
      lon:
        description: "Longitude"
        required: true
      radius:
        description: "Radius km"
        default: "10"
      concurrency:
        description: "Concurrent requests"
        default: "2"
      requests:
        description: "Total requests"
        default: "50"
      items:
        description: "Items per basket"
        default: "12"
      target_rps:
        description: "Requests/second pacing (keeps under throttle)"
        default: "0.4"
      auth_bearer:
        description: "Bearer token (optional)"
        required: false
      products_file:
        description: "Path to product list in repo (optional)"
        required: false
      max_errors:
        description: "Fail if errors > this number"
        default: "0"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install httpx

      - name: Run load test
        env:
          BASE_URL:      ${{ github.event.inputs.base_url }}
          LAT:           ${{ github.event.inputs.lat }}
          LON:           ${{ github.event.inputs.lon }}
          RADIUS:        ${{ github.event.inputs.radius }}
          CONCURRENCY:   ${{ github.event.inputs.concurrency }}
          REQUESTS:      ${{ github.event.inputs.requests }}
          ITEMS:         ${{ github.event.inputs.items }}
          TARGET_RPS:    ${{ github.event.inputs.target_rps }}
          AUTH_BEARER:   ${{ github.event.inputs.auth_bearer }}
          PRODUCTS_FILE: ${{ github.event.inputs.products_file }}
        run: |
          mkdir -p out
          CMD="python scripts/loadtest_compare.py \
            --base-url \"$BASE_URL\" \
            --lat \"$LAT\" --lon \"$LON\" --radius \"$RADIUS\" \
            --concurrency \"$CONCURRENCY\" --requests \"$REQUESTS\" \
            --items \"$ITEMS\" --target-rps \"$TARGET_RPS\" \
            --out out/summary.json"
          if [ -n "$AUTH_BEARER" ]; then
            CMD="$CMD --auth-bearer \"$AUTH_BEARER\""
          fi
          if [ -n "$PRODUCTS_FILE" ]; then
            CMD="$CMD --products-file \"$PRODUCTS_FILE\""
          fi
          echo "$CMD"
          bash -lc "$CMD" | tee out/run.log

      - name: Fail if too many errors
        env:
          MAX_ERRORS: ${{ github.event.inputs.max_errors }}
        run: |
          ERRORS=$(grep -oE 'Errors: [0-9]+' out/run.log | awk '{print $2}')
          ERR
