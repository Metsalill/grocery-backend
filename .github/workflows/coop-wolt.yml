name: "Coop on Wolt – Crawl + optional DB upsert"

on:
  workflow_dispatch:
    inputs:
      venue_slug:
        description: "Wolt venue slug (e.g., coop-lasname, coop-prnu)"
        required: false
        default: "coop-prnu"
      categories_multiline:
        description: "Category URLs (one per line). Leave empty to auto-pick by venue_slug."
        required: false
        default: ""
      categories_file:
        description: "Repo file with categories (one per line). Overrides auto-pick."
        required: false
        default: ""
      max_products:
        description: "Cap products per category (0 = unlimited)"
        required: false
        default: "0"
      shards:
        description: "Number of shards (1–8)"
        required: false
        default: "4"
      upsert_db:
        description: "1 = upsert into DATABASE_URL (staging_coop_products)"
        required: false
        default: "1"
      force_playwright:
        description: "1 = force Playwright fallback instead of fast-path"
        required: false
        default: "0"
      extra_args:
        description: "Extra flags for wolt_crawler.py"
        required: false
        default: ""

jobs:
  crawl:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        shard_index: [0, 1, 2, 3, 4, 5, 6, 7]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute shard count
        id: shard
        run: |
          REQ="${{ github.event_name == 'workflow_dispatch' && inputs.shards || '1' }}"
          if ! [[ "$REQ" =~ ^[0-9]+$ ]]; then REQ=1; fi
          if [ "$REQ" -lt 1 ]; then REQ=1; fi
          if [ "$REQ" -gt 8 ]; then REQ=8; fi
          echo "count=$REQ" >> $GITHUB_OUTPUT

      - name: Skip unused shard
        if: ${{ matrix.shard_index >= fromJSON(steps.shard.outputs.count) }}
        run: echo "Skipping shard ${{ matrix.shard_index }} (only ${{ steps.shard.outputs.count }} requested)"

      - name: Setup Python
        if: ${{ matrix.shard_index < fromJSON(steps.shard.outputs.count) }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (pip + Playwright)
        if: ${{ matrix.shard_index < fromJSON(steps.shard.outputs.count) }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install playwright asyncpg
          python -m playwright install --with-deps chromium

      - name: Prepare categories
        if: ${{ matrix.shard_index < fromJSON(steps.shard.outputs.count) }}
        id: cats
        env:
          CATS_FILE_INPUT: ${{ inputs.categories_file }}
          CATS_MULTILINE: ${{ inputs.categories_multiline }}
          VENUE_SLUG: ${{ inputs.venue_slug }}
        run: |
          set -euo pipefail
          mkdir -p out
          : > /tmp/categories.txt

          # 1) If multiline provided, write it first
          if [ -n "$CATS_MULTILINE" ]; then
            printf "%s\n" "$CATS_MULTILINE" > /tmp/categories.txt
          fi

          # 2) If a file path is provided, prefer it
          if [ -n "$CATS_FILE_INPUT" ]; then
            if [ -f "$CATS_FILE_INPUT" ]; then
              cp "$CATS_FILE_INPUT" /tmp/categories.txt
            elif [ -f "${GITHUB_WORKSPACE}/${CATS_FILE_INPUT}" ]; then
              cp "${GITHUB_WORKSPACE}/${CATS_FILE_INPUT}" /tmp/categories.txt
            else
              echo "Provided categories_file not found: $CATS_FILE_INPUT"
              echo "Checked: '$CATS_FILE_INPUT' and '${GITHUB_WORKSPACE}/${CATS_FILE_INPUT}'"
              exit 2
            fi
          fi

          # 3) Auto-pick by venue slug if still empty
          if [ ! -s /tmp/categories.txt ]; then
            SL="$(echo "${VENUE_SLUG:-}" | tr '[:upper:]' '[:lower:]')"
            case "$SL" in
              coop-prnu|coop-prn*) AUTO="data/wolt_coop_prnu_categories.txt" ;;
              coop-lasname|coop-lasn*) AUTO="data/wolt_coop_lasname_categories.txt" ;;
              *) AUTO="" ;;
            esac
            if [ -n "$AUTO" ]; then
              if [ -f "$AUTO" ]; then
                cp "$AUTO" /tmp/categories.txt
                echo "Auto-selected categories_file: $AUTO"
              elif [ -f "${GITHUB_WORKSPACE}/${AUTO}" ]; then
                cp "${GITHUB_WORKSPACE}/${AUTO}" /tmp/categories.txt
                echo "Auto-selected categories_file: ${GITHUB_WORKSPACE}/${AUTO}"
              fi
            fi
          fi

          if [ ! -s /tmp/categories.txt ]; then
            echo "No categories found. Provide categories_multiline or categories_file, or set venue_slug to a known one (coop-prnu / coop-lasname)."
            exit 2
          fi

          echo "path=/tmp/categories.txt" >> $GITHUB_OUTPUT

      - name: Run Wolt crawler (sharded)
        if: ${{ matrix.shard_index < fromJSON(steps.shard.outputs.count) }}
        env:
          PYTHONUNBUFFERED: "1"
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          COOP_UPSERT_DB: ${{ inputs.upsert_db }}
          COOP_DEDUP_DB: ${{ inputs.upsert_db }}
          WOLT_FORCE_PLAYWRIGHT: ${{ inputs.force_playwright }}
        run: |
          set -euo pipefail

          SHARD_COUNT="${{ steps.shard.outputs.count }}"
          EXTRA="${{ inputs.extra_args }}"
          MAX_PRODUCTS="${{ inputs.max_products }}"

          echo "::group::Args"
          echo "venue_slug=${{ inputs.venue_slug }}"
          echo "max_products=$MAX_PRODUCTS"
          echo "::endgroup::"

          python3 scripts/wolt_crawler.py \
            --categories-file "${{ steps.cats.outputs.path }}" \
            --max-products "${MAX_PRODUCTS:-0}" \
            --out "out/coop_wolt_${{ github.run_id }}_shard${{ matrix.shard_index }}.csv" \
            $EXTRA

      - name: Upload CSV artifact
        if: ${{ always() && matrix.shard_index < fromJSON(steps.shard.outputs.count) }}
        uses: actions/upload-artifact@v4
        with:
          name: coop-wolt-${{ github.run_id }}-part-${{ matrix.shard_index }}
          path: out/*.csv
          if-no-files-found: warn
          retention-days: 7
