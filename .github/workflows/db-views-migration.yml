name: DB Views Migration (latest & cheapest)

on:
  workflow_dispatch:
    inputs:
      file:
        description: "Optional: run a single migration file (e.g., migrations/20250825_prices_schema_rev3.sql)"
        required: false
        default: ""
  push:
    branches: [ main ]
    paths:
      - "migrations/*.sql"
      - "migrations/**/*.sql"
      - ".github/workflows/db-views-migration.yml"

concurrency:
  group: db-migrations
  cancel-in-progress: true

jobs:
  migrate-views:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DATABASE_URL: ${{ secrets.RW_DATABASE_URL }}  # e.g. postgres://.../db?sslmode=require

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          psql --version

      - name: Apply migrations (sorted; supports single-file)
        shell: bash
        run: |
          set -euo pipefail
          single="${{ github.event.inputs.file }}"
          if [[ -n "${single}" ]]; then
            if [[ ! -f "${single}" ]]; then
              echo "::error file=${single},line=1,col=1::Specified file not found"
              exit 1
            fi
            files=("${single}")
          else
            shopt -s nullglob
            files=(migrations/*.sql migrations/**/*.sql)
          fi

          if (( ${#files[@]} == 0 )); then
            echo "No migration files found â€” skipping."
            exit 0
          fi

          IFS=$'\n' files=($(LC_ALL=C sort <<<"${files[*]}")); unset IFS
          for f in "${files[@]}"; do
            echo "Applying: $f"
            psql -X "$DATABASE_URL" -v ON_ERROR_STOP=1 -f "$f"
          done

      - name: Smoke test
        shell: bash
        run: |
          set -e
          echo "Tables:" && psql -X "$DATABASE_URL" -c "\dt+ public.*" || true
          echo "Views:"  && psql -X "$DATABASE_URL" -c "\dv+ public.*" || true
          psql -X "$DATABASE_URL" -Atc "SELECT to_regclass('public.products');" || true
          psql -X "$DATABASE_URL" -Atc "SELECT to_regclass('public.price_history');" || true
          psql -X "$DATABASE_URL" -Atc "SELECT to_regclass('public.prices');" || true
          echo "Sample latest-store prices:" && \
            psql -X "$DATABASE_URL" -c "SELECT * FROM public.v_latest_store_prices LIMIT 5;" || true
          echo "Sample cheapest-offer:" && \
            psql -X "$DATABASE_URL" -c "SELECT * FROM public.v_cheapest_offer LIMIT 5;" || true
